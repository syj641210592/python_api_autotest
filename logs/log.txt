2020-09-05 18:11:45,158 - [test_case.py-->line:178] - INFO: 用例--登录成功--执行成功
2020-09-05 18:11:45,354 - [test_case.py-->line:178] - INFO: 用例--登录失败_未注册的账号--执行成功
2020-09-05 18:11:45,483 - [test_case.py-->line:178] - INFO: 用例--登录失败_错误的密码--执行成功
2020-09-05 18:11:45,612 - [test_case.py-->line:178] - INFO: 用例--登录失败_多余的参数--执行成功
2020-09-05 18:11:45,707 - [test_case.py-->line:178] - INFO: 用例--登录失败_账号为空--执行成功
2020-09-05 18:11:45,842 - [test_case.py-->line:178] - INFO: 用例--登录失败_密码--执行成功
2020-09-05 18:11:47,166 - [test_case.py-->line:104] - INFO: 用例--充值成功_0--执行成功
2020-09-05 18:11:47,429 - [test_case.py-->line:104] - INFO: 用例--充值成功_0.01--执行成功
2020-09-05 18:11:47,706 - [test_case.py-->line:104] - INFO: 用例--充值成功_499999.99--执行成功
2020-09-05 18:11:47,970 - [test_case.py-->line:104] - INFO: 用例--充值成功_500000--执行成功
2020-09-05 18:11:48,092 - [test_case.py-->line:100] - ERROR: 用例--充值失败_小于0--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 98, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 43, in com_assertEqual
    self.assertEqual(respone["msg"], expect["msg"])  # msg
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于500000
? ^
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-05 18:11:48,229 - [test_case.py-->line:100] - ERROR: 用例--充值失败_大于50--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 98, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 43, in com_assertEqual
    self.assertEqual(respone["msg"], expect["msg"])  # msg
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于500000
? ^
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-05 18:11:48,355 - [test_case.py-->line:100] - ERROR: 用例--充值失败_精度小于小数点后两位--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 98, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 43, in com_assertEqual
    self.assertEqual(respone["msg"], expect["msg"])  # msg
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-05 18:11:48,543 - [test_case.py-->line:104] - INFO: 用例--充值失败_非登录账户id--执行成功
2020-09-05 18:11:48,644 - [test_case.py-->line:104] - INFO: 用例--充值失败_无登录账户id--执行成功
2020-09-05 18:11:48,760 - [test_case.py-->line:100] - ERROR: 用例--充值失败_无充值金额--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 98, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 43, in com_assertEqual
    self.assertEqual(respone["msg"], expect["msg"])  # msg
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '余额必须为数值型' != '必填参数为空'
- 余额必须为数值型
+ 必填参数为空

2020-09-05 18:11:48,884 - [test_case.py-->line:100] - ERROR: 用例--充值失败_非数字金额--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 98, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 43, in com_assertEqual
    self.assertEqual(respone["msg"], expect["msg"])  # msg
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '余额必须为数值型' != '金额必须为数值型'
- 余额必须为数值型
? ^
+ 金额必须为数值型
? ^

2020-09-05 18:11:49,737 - [test_case.py-->line:141] - INFO: 用例--注册成功_未注册的11位手机号_8位数字字母密码_权限空_昵称空--执行成功
2020-09-05 18:11:49,936 - [test_case.py-->line:141] - INFO: 用例--注册成功_未注册的11位手机号_16位数字字符密码_权限空_昵称空--执行成功
2020-09-05 18:11:50,071 - [test_case.py-->line:141] - INFO: 用例--注册失败_已存在的手机号--执行成功
2020-09-05 18:11:50,199 - [test_case.py-->line:141] - INFO: 用例--注册失败_已存在的手机号_不同密码--执行成功
2020-09-05 18:11:50,298 - [test_case.py-->line:141] - INFO: 用例--注册失败_账号为空--执行成功
2020-09-05 18:11:50,393 - [test_case.py-->line:141] - INFO: 用例--注册失败_账号9位--执行成功
2020-09-05 18:11:50,484 - [test_case.py-->line:141] - INFO: 用例--注册失败_账号12位--执行成功
2020-09-05 18:11:50,578 - [test_case.py-->line:141] - INFO: 用例--注册失败_手机号带字母--执行成功
2020-09-05 18:11:50,683 - [test_case.py-->line:141] - INFO: 用例--注册失败_手机号带中文--执行成功
2020-09-05 18:11:50,773 - [test_case.py-->line:141] - INFO: 用例--注册失败_手机号带字符--执行成功
2020-09-05 18:11:50,963 - [test_case.py-->line:141] - INFO: 用例--注册失败_7位密码--执行成功
2020-09-05 18:11:51,144 - [test_case.py-->line:141] - INFO: 用例--注册失败_密码为空--执行成功
2020-09-05 18:11:51,334 - [test_case.py-->line:141] - INFO: 用例--注册失败_17位密码--执行成功
2020-09-05 18:11:51,526 - [test_case.py-->line:141] - INFO: 用例--注册成功_权限0--执行成功
2020-09-05 18:11:51,725 - [test_case.py-->line:141] - INFO: 用例--注册成功_权限1--执行成功
2020-09-05 18:11:51,904 - [test_case.py-->line:141] - INFO: 用例--注册失败_权限2--执行成功
2020-09-05 18:11:52,092 - [test_case.py-->line:137] - ERROR: 用例--注册失败_权限字母--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 135, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-09-05 18:11:52,290 - [test_case.py-->line:137] - ERROR: 用例--注册失败_权限中文--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 135, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-09-05 18:11:52,502 - [test_case.py-->line:141] - INFO: 用例--注册成功_昵称1位--执行成功
2020-09-05 18:11:52,715 - [test_case.py-->line:141] - INFO: 用例--注册成功_昵称10位--执行成功
2020-09-05 18:11:52,907 - [test_case.py-->line:141] - INFO: 用例--注册失败_昵称11位--执行成功
2020-09-05 18:11:53,116 - [test_case.py-->line:141] - INFO: 用例--注册成功_昵称重复--执行成功
2020-09-05 18:11:54,751 - [test_case.py-->line:52] - INFO: 用例--提现成功_0.01--执行成功
2020-09-05 18:11:55,015 - [test_case.py-->line:52] - INFO: 用例--提现成功_499999.99--执行成功
2020-09-05 18:11:55,276 - [test_case.py-->line:52] - INFO: 用例--提现成功_500000--执行成功
2020-09-05 18:11:55,417 - [test_case.py-->line:48] - ERROR: 用例--提现失败_0--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 45, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:11:55,545 - [test_case.py-->line:52] - INFO: 用例--提现失败_500000.01--执行成功
2020-09-05 18:11:55,667 - [test_case.py-->line:52] - INFO: 用例--提现失败_负数--执行成功
2020-09-05 18:11:55,796 - [test_case.py-->line:48] - ERROR: 用例--提现失败_0.001--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 45, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 43, in com_assertEqual
    self.assertEqual(respone["msg"], expect["msg"])  # msg
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-05 18:11:55,997 - [test_case.py-->line:52] - INFO: 用例--提现失败_非登录id--执行成功
2020-09-05 18:11:56,080 - [test_case.py-->line:52] - INFO: 用例--提现失败_id为空--执行成功
2020-09-05 18:11:56,209 - [test_case.py-->line:48] - ERROR: 用例--提现失败_金额为空--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 45, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 43, in com_assertEqual
    self.assertEqual(respone["msg"], expect["msg"])  # msg
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-05 18:11:56,347 - [test_case.py-->line:52] - INFO: 用例--提现失败_金额非整数--执行成功
2020-09-05 18:11:56,479 - [test_case.py-->line:48] - ERROR: 用例--提现失败_id参数类型整数型--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case.py", line 45, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:11:56,687 - [test_case.py-->line:52] - INFO: 用例--提现失败_金额大于余额--执行成功
2020-09-05 18:11:57,878 - [test_case_add.py-->line:46] - INFO: 用例--新增项目成功_1个月--执行成功
2020-09-05 18:11:58,086 - [test_case_add.py-->line:46] - INFO: 用例--新增项目成功_36个月--执行成功
2020-09-05 18:11:58,293 - [test_case_add.py-->line:46] - INFO: 用例--新增项目成功_10天--执行成功
2020-09-05 18:11:58,509 - [test_case_add.py-->line:46] - INFO: 用例--新增项目成功_45天--执行成功
2020-09-05 18:11:58,712 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_不存在id--执行成功
2020-09-05 18:11:58,925 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_非登录id--执行成功
2020-09-05 18:11:59,082 - [test_case_add.py-->line:42] - ERROR: 用例--新增项目失败_id类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_add.py", line 35, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:11:59,200 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_id空格--执行成功
2020-09-05 18:11:59,312 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_id为空--执行成功
2020-09-05 18:11:59,456 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_标题空格--执行成功
2020-09-05 18:11:59,621 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_标题为空--执行成功
2020-09-05 18:11:59,762 - [test_case_add.py-->line:42] - ERROR: 用例--新增项目失败_标题类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_add.py", line 35, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:11:59,910 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款为0--执行成功
2020-09-05 18:12:00,054 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款为负数--执行成功
2020-09-05 18:12:00,196 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款不为整数--执行成功
2020-09-05 18:12:00,339 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款不为100的整数倍--执行成功
2020-09-05 18:12:00,482 - [test_case_add.py-->line:42] - ERROR: 用例--新增项目失败_借款类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_add.py", line 35, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:12:00,626 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款为空--执行成功
2020-09-05 18:12:00,774 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_年化为0--执行成功
2020-09-05 18:12:00,934 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_年化负数--执行成功
2020-09-05 18:12:01,081 - [test_case_add.py-->line:42] - ERROR: 用例--新增项目失败_年化参数类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_add.py", line 35, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:12:01,224 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_年化参数为空--执行成功
2020-09-05 18:12:01,364 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款期限为0--执行成功
2020-09-05 18:12:01,520 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款期限为小数--执行成功
2020-09-05 18:12:01,677 - [test_case_add.py-->line:42] - ERROR: 用例--新增项目失败_借款类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_add.py", line 35, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:12:01,853 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款参数为空--执行成功
2020-09-05 18:12:01,998 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款期限为0天--执行成功
2020-09-05 18:12:02,141 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款期限为9天--执行成功
2020-09-05 18:12:02,299 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款期限为46天--执行成功
2020-09-05 18:12:02,449 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款期限参数为空--执行成功
2020-09-05 18:12:02,605 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款期限单位为0--执行成功
2020-09-05 18:12:02,743 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款期限单位为3--执行成功
2020-09-05 18:12:02,870 - [test_case_add.py-->line:42] - ERROR: 用例--新增项目失败_借款期限单位类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_add.py", line 35, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 43, in com_assertEqual
    self.assertEqual(respone["msg"], expect["msg"])  # msg
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '数值参数格式不正确'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 数值参数格式不正确

2020-09-05 18:12:02,997 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_借款期限单位为空--执行成功
2020-09-05 18:12:03,105 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_竞标天数为0--执行成功
2020-09-05 18:12:03,220 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_竞标天数为11--执行成功
2020-09-05 18:12:03,346 - [test_case_add.py-->line:42] - ERROR: 用例--新增项目失败_竞标天数类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_add.py", line 35, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:12:03,475 - [test_case_add.py-->line:46] - INFO: 用例--新增项目失败_竞标天数参数为空--执行成功
2020-09-05 18:12:04,761 - [test_case_add.py-->line:117] - INFO: 用例--审核成功_项目通过--执行成功
2020-09-05 18:12:05,072 - [test_case_add.py-->line:117] - INFO: 用例--审核成功_项目不通过--执行成功
2020-09-05 18:12:05,338 - [test_case_add.py-->line:117] - INFO: 用例--审核失败_项目已审核--执行成功
2020-09-05 18:12:05,600 - [test_case_add.py-->line:113] - ERROR: 用例--审核失败_项目id类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_add.py", line 101, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:12:05,814 - [test_case_add.py-->line:117] - INFO: 用例--审核失败_项目id不存在--执行成功
2020-09-05 18:12:06,080 - [test_case_add.py-->line:117] - INFO: 用例--审核失败_审核状态类型错误--执行成功
2020-09-05 18:12:06,350 - [test_case_add.py-->line:117] - INFO: 用例--审核失败_审核状态类不存在--执行成功
2020-09-05 18:12:08,174 - [test_case_invest.py-->line:61] - INFO: 用例--新增投资100成功--执行成功
2020-09-05 18:12:08,326 - [test_case_invest.py-->line:57] - ERROR: 用例--新增投资失败_用户id参数类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_invest.py", line 45, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:12:08,467 - [test_case_invest.py-->line:57] - ERROR: 用例--新增投资失败_用户id参数为空--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_invest.py", line 45, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 43, in com_assertEqual
    self.assertEqual(respone["msg"], expect["msg"])  # msg
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '会员id为空' != '项目id为空'
- 会员id为空
+ 项目id为空

2020-09-05 18:12:08,683 - [test_case_invest.py-->line:61] - INFO: 用例--新增投资失败_非登录用户id--执行成功
2020-09-05 18:12:08,890 - [test_case_invest.py-->line:61] - INFO: 用例--新增投资失败_非竞标项目--执行成功
2020-09-05 18:12:09,049 - [test_case_invest.py-->line:57] - ERROR: 用例--新增投资失败_竞标项目参数为空--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_invest.py", line 45, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-05 18:12:09,199 - [test_case_invest.py-->line:61] - INFO: 用例--新增投资失败_投资金额非100整数--执行成功
2020-09-05 18:12:09,328 - [test_case_invest.py-->line:57] - ERROR: 用例--新增投资失败_投资金额超出最大金额--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_invest.py", line 45, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 41, in com_assertEqual
    self.assertEqual(respone["msg"], expect["msg"].split(",")[0])  # msg
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '该标可投金额不足,可投金额：9.99998E7' != '该标可投金额不足'
- 该标可投金额不足,可投金额：9.99998E7
+ 该标可投金额不足

2020-09-05 18:12:09,460 - [test_case_invest.py-->line:61] - INFO: 用例--新增投资失败_投资金额负数--执行成功
2020-09-05 18:12:09,576 - [test_case_invest.py-->line:61] - INFO: 用例--新增投资失败_投资金额为0--执行成功
2020-09-05 18:12:09,720 - [test_case_invest.py-->line:57] - ERROR: 用例--新增投资失败_投资金额参数错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_invest.py", line 45, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:12:09,853 - [test_case_invest.py-->line:57] - ERROR: 用例--新增投资失败_投资金额参数为空--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_invest.py", line 45, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-05 18:12:10,630 - [test_case_invest.py-->line:61] - INFO: 用例--新增投资最大值成功--执行成功
2020-09-05 18:12:11,520 - [test_case_invest.py-->line:102] - INFO: 用例--新增获取项目列表成功--执行成功
2020-09-05 18:12:11,639 - [test_case_invest.py-->line:102] - INFO: 用例--新增获取项目列表成功--执行成功
2020-09-05 18:12:11,751 - [test_case_invest.py-->line:102] - INFO: 用例--新增获取项目列表成功--执行成功
2020-09-05 18:12:12,078 - [test_case_invest.py-->line:98] - ERROR: 用例--新增获取项目列表失败_索引参数类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_invest.py", line 96, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:12:12,179 - [test_case_invest.py-->line:98] - ERROR: 用例--新增获取项目列表失败_每页大小类型错误--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_invest.py", line 96, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:12:13,507 - [test_case_update.py-->line:87] - INFO: 用例--获取信息成功--执行成功
2020-09-05 18:12:14,984 - [test_case_update.py-->line:46] - INFO: 用例--更新昵称成功_1位--执行成功
2020-09-05 18:12:15,176 - [test_case_update.py-->line:42] - ERROR: 用例--更新昵称成功_10位--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_update.py", line 39, in test_case
    self.assertEqual(res["reg_name"], self.params["reg_name"])  # 校验更新后的昵称与预期
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '孙' != '孙孙孙孙孙孙孙孙孙孙'
- 孙
+ 孙孙孙孙孙孙孙孙孙孙

2020-09-05 18:12:15,318 - [test_case_update.py-->line:42] - ERROR: 用例--更新昵称失败_id 非整数型--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_update.py", line 40, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-05 18:12:15,420 - [test_case_update.py-->line:46] - INFO: 用例--更新昵称失败_id 非整数型--执行成功
2020-09-05 18:12:15,606 - [test_case_update.py-->line:46] - INFO: 用例--更新昵称失败_id 非登录--执行成功
2020-09-05 18:12:15,707 - [test_case_update.py-->line:46] - INFO: 用例--更新昵称失败_id 为空--执行成功
2020-09-05 18:12:15,839 - [test_case_update.py-->line:46] - INFO: 用例--更新昵称失败_昵称11位--执行成功
2020-09-05 18:12:15,966 - [test_case_update.py-->line:46] - INFO: 用例--更新昵称失败_昵称为空--执行成功
2020-09-05 18:12:16,124 - [test_case_update.py-->line:46] - INFO: 用例--更新昵称失败_昵称为空--执行成功
2020-09-05 18:12:16,272 - [test_case_update.py-->line:42] - ERROR: 用例--更新昵称失败_昵称非字符串--执行失败
Traceback (most recent call last):
  File "d:\Program Files\SunWang\python_api_autotest\testcase\test_case_update.py", line 40, in test_case
    com_assertEqual(self, respone, eval(kwargs["expect"]))
  File "d:\Program Files\SunWang\python_api_autotest\com_func\com_request_func.py", line 39, in com_assertEqual
    self.assertEqual(respone["code"], expect["code"])  # 判断code
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python\Python37\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
